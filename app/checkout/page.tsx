'use client'

import { useEffect, useRef, useState } from 'react'
import Link from 'next/link'
import Image from 'next/image'
import { useRouter } from 'next/navigation'
import { useCart, type CartItem } from '@/components/CartContext'

const INVITE_URL = 'https://discord.gg/ZAPXTwUYmW' // ‚¨ÖÔ∏è ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ä‡∏¥‡∏ç‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏¥‡∏•‡∏î‡πå‡∏Ñ‡∏∏‡∏ì

type GuildState = { member: boolean; pending: boolean; ready: boolean }

export default function CheckoutPage() {
  const router = useRouter()
  const { items, setQty, remove, total, clear } = useCart()

  const [mounted, setMounted] = useState(false)
  const [loading, setLoading] = useState(false)

  const [discordUserId, setDiscordUserId] = useState<string | null>(null)
  const [guild, setGuild] = useState<GuildState>({ member: false, pending: false, ready: false })
  const pollRef = useRef<NodeJS.Timeout | null>(null)
  const [lastChannelId, setLastChannelId] = useState<string | null>(null)

  // ‡∏ö‡∏£‡∏µ‡∏ü + ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå)
  const [brief, setBrief] = useState('')
  const [refLink, setRefLink] = useState('')

  const BRIEF_TEMPLATE = [
    'üìù ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô:',
    '- ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πä‡∏á/‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß/‡∏ó‡∏µ‡∏°:',
    '- ‡πÇ‡∏ó‡∏ô‡∏™‡∏µ‡∏´‡∏•‡∏±‡∏Å/‡∏£‡∏≠‡∏á:',
    '- ‡∏™‡πÑ‡∏ï‡∏•‡πå/‡∏ò‡∏µ‡∏°:',
    '- ‡∏Ç‡∏ô‡∏≤‡∏î/‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏™‡πà‡∏ß‡∏ô:',
    '- (‡∏•‡∏ß‡∏î‡∏•‡∏≤‡∏¢‡∏ï‡πà‡∏≤‡∏á‡πÜ‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡πÅ‡∏ô‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û):',
    '',
  ].join('\n')

  function insertTemplate() {
    const urlPart = refLink.trim() ? ` ${refLink.trim()}` : ''
    const base = BRIEF_TEMPLATE.replace('‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ): ', `‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ):${urlPart}`)
    setBrief((curr) => (curr ? `${curr}\n\n${base}` : base))
  }
  function clearBrief() {
    setBrief('')
    setRefLink('')
  }

  useEffect(() => { setMounted(true) }, [])

  // ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô Discord
  useEffect(() => {
    fetch('/api/me')
      .then((r) => (r.ok ? r.json() : { discordUserId: null }))
      .then((d) => setDiscordUserId(d.discordUserId ?? null))
      .catch(() => setDiscordUserId(null))
  }, [])

  const loginWithDiscord = () => { window.location.href = '/api/discord/login' }
  const logout = async () => {
    await fetch('/api/logout', { method: 'POST' })
    setDiscordUserId(null)
    router.refresh()
  }

  // ‡πÄ‡∏ä‡πá‡∏Å membership ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
  async function checkGuildOnce() {
    if (!discordUserId) {
      setGuild({ member: false, pending: false, ready: false })
      return
    }
    const r = await fetch(`/api/discord/membership?userId=${discordUserId}`, { cache: 'no-store' })
      .then(res => res.json()).catch(() => ({ ok: false }))
    if (!r?.ok) { setGuild({ member: false, pending: false, ready: false }); return }
    if (!r.member) setGuild({ member: false, pending: false, ready: false })
    else if (r.pending) setGuild({ member: true, pending: true, ready: false })
    else setGuild({ member: true, pending: false, ready: true })
  }
  useEffect(() => { checkGuildOnce() }, [discordUserId])

  // ‡πÄ‡∏õ‡∏¥‡∏î invite ‡πÅ‡∏•‡∏∞ poll ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏£‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
  function openInviteAndPoll() {
    window.open(INVITE_URL, '_blank')
    if (pollRef.current) clearInterval(pollRef.current)
    let ticks = 0
    pollRef.current = setInterval(async () => {
      await checkGuildOnce()
      ticks++
      setGuild(g => {
        if (g.ready && pollRef.current) { clearInterval(pollRef.current); pollRef.current = null }
        return g
      })
      if (ticks > 10 && pollRef.current) { // ~40s
        clearInterval(pollRef.current)
        pollRef.current = null
      }
    }, 4000)
  }

  // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡πÄ‡∏°‡∏∑‡πà‡∏≠ focus/‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤ visible
  useEffect(() => {
    const onFocus = () => {
      checkGuildOnce()
      if (discordUserId && !guild.ready) {
        if (pollRef.current) clearInterval(pollRef.current)
        let ticks = 0
        pollRef.current = setInterval(async () => {
          await checkGuildOnce()
          ticks++
          setGuild(g => {
            if (g.ready && pollRef.current) { clearInterval(pollRef.current); pollRef.current = null }
            return g
          })
          if (ticks > 10 && pollRef.current) { clearInterval(pollRef.current); pollRef.current = null }
        }, 3000)
        setTimeout(() => { if (pollRef.current) { clearInterval(pollRef.current); pollRef.current = null } }, 30000)
      }
    }
    window.addEventListener('focus', onFocus)
    const onVis = () => { if (document.visibilityState === 'visible') onFocus() }
    document.addEventListener('visibilitychange', onVis)
    return () => {
      window.removeEventListener('focus', onFocus)
      document.removeEventListener('visibilitychange', onVis)
    }
  }, [discordUserId, guild.ready])

  // ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
  async function placeOrder() {
  if (!brief.trim()) { alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ö‡∏£‡∏µ‡∏ü‡∏á‡∏≤‡∏ô'); return }
  if (items.length === 0) { alert('‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏á'); return }
  if (!discordUserId) { alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ Login ‡∏î‡πâ‡∏ß‡∏¢ Discord ‡∏Å‡πà‡∏≠‡∏ô'); return }
  if (!guild.ready) {
    if (!guild.member) alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏° Discord Server ‡∏Å‡πà‡∏≠‡∏ô')
    else if (guild.pending) alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Å‡∏é (Rules) ‡πÉ‡∏ô Discord ‡∏Å‡πà‡∏≠‡∏ô')
    return
  }

  setLoading(true)

  // ‚úÖ ‡∏£‡∏ß‡∏° refLink ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏ö‡∏£‡∏µ‡∏ü‡πÄ‡∏™‡∏°‡∏≠ (‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å)
  const url = refLink.trim()
  const mergedBrief =
    url && /^https?:\/\//i.test(url)
      ? `${brief.trim()}\n\nüîó ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á: ${url}`
      : brief.trim()

  const payload = {
    items: items.map(({ id, name, qty, price, image }: CartItem) => ({
      id, name, qty, price,
      image: (image && /^https?:\/\//i.test(image)) ? image : undefined,
    })),
    customer: { brief: mergedBrief, discordUserId } // ‚Üê ‡πÉ‡∏ä‡πâ mergedBrief
  }

  const res = await fetch('/api/order', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(payload),
  }).then(r => r.json()).catch(() => ({ ok: false }))

  setLoading(false)

  if (!res?.ok) { alert('‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'); return }

  setLastChannelId(res.channelId ?? null)
  if (res.inviteUrl) window.open(res.inviteUrl, '_blank')
  clear()
  setBrief('')
  setRefLink('')
  alert('‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏ô Discord ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏ñ‡πâ‡∏≤‡∏°‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏´‡πá‡∏ô ‡πÉ‡∏´‡πâ‡∏Å‡∏î‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Å‡∏é ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏î ‚Äú‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‚Äù.')
}

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
  async function grantAgain() {
    if (!lastChannelId || !discordUserId) return alert('‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ')
    const r = await fetch('/api/order/grant', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ channelId: lastChannelId, customerDiscordId: discordUserId }),
    }).then(res => res.json()).catch(() => ({ ok: false }))
    if (r?.ok) alert('‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß ‡∏•‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á')
    else alert('‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô')
  }

  if (!mounted) return null

  return (
    <main className="mx-auto max-w-3xl px-4 md:px-8 py-10">
      <h1 className="text-2xl md:text-3xl font-oswald mb-6">Checkout</h1>

      {/* ====== ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ====== */}
      <div className="rounded-lg border border-neutral-200 p-4 mb-6">
        <div className="mb-3 font-medium">‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</div>

        {items.length === 0 ? (
          <div className="flex items-center justify-between text-sm text-neutral-500">
            <span>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤</span>
            <Link
              href="/"
              className="rounded-md border border-neutral-300 px-3 py-1.5 text-neutral-800 hover:border-neutral-900"
            >
              ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡πà‡∏≠
            </Link>
          </div>
        ) : (
          <>
            <ul className="space-y-3 text-sm">
              {items.map((item) => (
                <li key={item.id} className="flex items-center justify-between gap-3">
                  {/* ‡∏ã‡πâ‡∏≤‡∏¢: ‡∏£‡∏π‡∏õ + ‡∏ä‡∏∑‡πà‡∏≠/‡∏£‡∏≤‡∏Ñ‡∏≤ */}
                  <div className="flex-1 flex items-center gap-3 min-w-0">
                    <div className="h-12 w-12 md:h-16 md:w-16 overflow-hidden rounded-md border border-neutral-200 bg-neutral-50 shrink-0">
                      {item.image ? (
                        <Image
                          src={item.image}
                          alt={item.name}
                          width={120}
                          height={150}
                          className="h-full w-full object-cover"
                        />
                      ) : (
                        <div className="flex h-full w-full items-center justify-center text-[10px] text-neutral-400">
                          no image
                        </div>
                      )}
                    </div>

                    <div className="min-w-0">
                      <div className="font-medium truncate">{item.name}</div>
                      <div className="text-neutral-500">
                        {item.price.toLocaleString('th-TH')} ‡∏ø / ‡∏ä‡∏¥‡πâ‡∏ô
                      </div>
                    </div>
                  </div>

                  {/* ‡∏Ç‡∏ß‡∏≤: ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô + ‡∏•‡∏ö */}
                  <div className="flex items-center gap-2">
                    <button
                      onClick={() => setQty(item.id, Math.max(1, item.qty - 1))}
                      className="rounded-md border px-2 hover:bg-neutral-50 disabled:opacity-40"
                      aria-label="‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"
                      disabled={loading}
                    >
                      ‚àí
                    </button>
                    <span className="tabular-nums w-6 text-center">{item.qty}</span>
                    <button
                      onClick={() => setQty(item.id, item.qty + 1)}
                      className="rounded-md border px-2 hover:bg-neutral-50 disabled:opacity-40"
                      aria-label="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"
                      disabled={loading}
                    >
                      +
                    </button>
                  </div>

                  <button
                    onClick={() => remove(item.id)}
                    className="text-red-600 hover:underline disabled:opacity-40"
                    disabled={loading}
                  >
                    ‡∏•‡∏ö
                  </button>
                </li>
              ))}
            </ul>

            <div className="mt-4 flex items-center justify-between font-medium">
              <span>‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
              <span>{total.toLocaleString('th-TH')} ‡∏ø</span>
            </div>
          </>
        )}
      </div>

      {/* ====== ‡∏ö‡∏£‡∏µ‡∏ü‡∏á‡∏≤‡∏ô (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå) ====== */}
      <div className="rounded-lg border border-neutral-200 p-4 mb-6">
        <div className="mb-3 font-medium">‡∏ö‡∏£‡∏µ‡∏ü‡∏á‡∏≤‡∏ô</div>

        {/* ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á (‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÅ‡∏ó‡∏£‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏ö‡∏£‡∏µ‡∏ü) */}
        <div className="mb-3">
          <label className="block text-sm text-neutral-700 mb-1">
            ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏á‡∏≤‡∏ô (Google Drive/Imgur/‡∏Ø‡∏•‡∏Ø) ‚Äî *‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö
          </label>
          <input
            type="url"
            placeholder="https://..."
            value={refLink}
            onChange={(e) => setRefLink(e.target.value)}
            disabled={!discordUserId}
            className="w-full rounded-md border border-neutral-300 px-3 py-2 text-sm disabled:bg-neutral-100 disabled:text-neutral-400"
          />
          <p className="mt-1 text-xs text-neutral-500">
            *‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏•‡∏¥‡∏á‡∏Å‡πå ‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà‡πÉ‡∏ô‡∏ö‡∏£‡∏µ‡∏ü‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö
          </p>
        </div>

        <textarea
          className="min-h-[180px] rounded-md border border-neutral-300 px-3 py-2 text-sm w-full disabled:bg-neutral-100 disabled:text-neutral-400"
          placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Discord ‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏∂‡∏á‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ö‡∏£‡∏µ‡∏ü‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ"
          value={brief}
          onChange={(e) => setBrief(e.target.value)}
          disabled={!discordUserId}
        />

        <div className="mt-3 flex flex-wrap items-center gap-2">
          <button
            type="button"
            onClick={insertTemplate}
            disabled={!discordUserId}
            className="rounded-md border border-neutral-300 px-3 py-1.5 text-sm hover:bg-neutral-50 disabled:opacity-50"
          >
            ‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï‡∏ö‡∏£‡∏µ‡∏ü‡πÉ‡∏´‡πâ
          </button>
          <button
            type="button"
            onClick={clearBrief}
            className="rounded-md border px-3 py-1.5 text-sm hover:bg-neutral-50"
          >
            ‡∏•‡πâ‡∏≤‡∏á‡∏ö‡∏£‡∏µ‡∏ü
          </button>
          <span className="text-xs text-neutral-500">
            *‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏∏‡∏¢‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á Discord ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ß‡πâ
          </span>
        </div>
      </div>

      {/* ====== ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Discord ====== */}
      <div className="rounded-lg border border-neutral-200 p-4 mb-6">
        <div className="mb-3 font-medium">‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Discord</div>

        {!discordUserId ? (
          <button
            onClick={loginWithDiscord}
            className="rounded-md bg-[#5865F2] text-white px-4 py-2 text-sm hover:opacity-90"
          >
            Login with Discord
          </button>
        ) : (
          <div className="space-y-2 text-sm">
            <div>‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß: <code className="px-1 rounded bg-neutral-100">{discordUserId}</code></div>

            {!guild.member && (
              <div className="flex items-center gap-2">
                <button onClick={openInviteAndPoll}
                        className="rounded-md bg-neutral-900 text-white px-3 py-1.5 hover:bg-neutral-800">
                  Join Discord Server
                </button>
                <span className="text-neutral-500">‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡∏¥‡∏™‡∏Ñ‡∏≠‡∏£‡πå‡∏î‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</span>
              </div>
            )}

            {guild.member && guild.pending && (
              <div className="text-amber-600">
                ‡∏¢‡∏±‡∏á <b>pending</b> ‚Äî ‡πÇ‡∏õ‡∏£‡∏î‡∏Å‡∏î‡πÄ‡∏Ç‡πâ‡∏≤ Discord ‡∏Å‡πà‡∏≠‡∏ô
              </div>
            )}

            {guild.member && !guild.pending && (
              <div className="text-emerald-600">‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡πâ‡∏ß ‚úÖ</div>
            )}

            {discordUserId && !guild.ready && (
              <div className="mt-2">
                <button
                  onClick={checkGuildOnce}
                  className="rounded-md border px-3 py-1.5 hover:bg-neutral-50 text-sm"
                >
                  ‡∏â‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÅ‡∏•‡πâ‡∏ß / ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
                </button>
                <p className="text-xs text-neutral-500 mt-1">
                  ‡∏ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏Å‡∏î‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Å‡∏é‡πÉ‡∏ô Discord ‡πÉ‡∏´‡πâ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
                </p>
              </div>
            )}

            <button onClick={logout}
                    className="rounded-md bg-red-600 text-white px-3 py-1.5 hover:bg-red-700">
              Logout
            </button>
          </div>
        )}
      </div>

      {/* ====== ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ ====== */}
      <div className="flex items-center gap-3">
        <button
          onClick={placeOrder}
          disabled={loading || !discordUserId || !guild.ready}
          className="rounded-md bg-neutral-900 text-white px-5 py-3 hover:bg-neutral-800 disabled:opacity-50"
        >
          {loading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‚Ä¶' : '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠'}
        </button>

        <Link href="/" className="rounded-md border border-neutral-300 px-5 py-3 text-neutral-800 hover:border-neutral-900">
          ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡πà‡∏≠
        </Link>
      </div>

      {/* ====== ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ====== */}
      {lastChannelId && (
        <div className="mt-4 flex items-center gap-2 text-sm">
          <button
            onClick={grantAgain}
            className="rounded-md border px-3 py-1.5 hover:bg-neutral-50"
          >
            ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
          </button>
          <span className="text-neutral-500">‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏á join Discord ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏Å‡∏î‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Å‡∏é</span>
        </div>
      )}
    </main>
  )
}
